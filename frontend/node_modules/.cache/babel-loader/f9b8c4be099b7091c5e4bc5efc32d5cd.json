{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arcstudent\\\\Desktop\\\\New folder (3)\\\\techis-wd-forum-django-react\\\\frontend\\\\src\\\\components\\\\common\\\\Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport queryString from 'query-string';\nimport { getMovies } from '../../reducks/movies/selectors';\nimport { fetchMovies } from '../../reducks/movies/operations';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Movie from './Movie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const parsed = queryString.parse(window.location.search);\n  console.log('the parsed value is :', parsed);\n  const [search, setSearch] = useState(null);\n  const dispatch = useDispatch();\n  const selector = useSelector(state => state);\n  const movies = getMovies(selector);\n  console.log('the parsed search is :', parsed.search);\n  useEffect(() => {\n    if (parsed.search !== undefined) {\n      setSearch(parsed.search);\n    }\n\n    if (search != null) {\n      let params = {\n        search: search\n      };\n      console.log('after parsed search is :', parsed.search);\n      console.log('the params is : ', params);\n      dispatch(fetchMovies(params));\n    }\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \" search\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"feature\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"heading\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          class: \"coming-soon\",\n          children: movies.results.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n            movie: movie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Search, \"K1MNcBfG0uIJbr6VCjzb8OmOAbs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/arcstudent/Desktop/New folder (3)/techis-wd-forum-django-react/frontend/src/components/common/Search.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","queryString","getMovies","fetchMovies","Header","Footer","Movie","Search","parsed","parse","window","location","search","console","log","setSearch","dispatch","selector","state","movies","undefined","params","results","map","movie"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAMC,MAAM,GAAGP,WAAW,CAACQ,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCN,MAArC;AACA,QAAM,CAACI,MAAD,EAASG,SAAT,IAAsBjB,QAAQ,CAAC,IAAD,CAApC;AAEA,QAAMkB,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAMkB,QAAQ,GAAGjB,WAAW,CAACkB,KAAK,IAAIA,KAAV,CAA5B;AACA,QAAMC,MAAM,GAAGjB,SAAS,CAACe,QAAD,CAAxB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCN,MAAM,CAACI,MAA7C;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,MAAM,CAACI,MAAP,KAAkBQ,SAAtB,EAAiC;AAC7BL,MAAAA,SAAS,CAACP,MAAM,CAACI,MAAR,CAAT;AACH;;AAED,QAAIA,MAAM,IAAI,IAAd,EAAoB;AAChB,UAAIS,MAAM,GAAG;AAAET,QAAAA,MAAM,EAAEA;AAAV,OAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCN,MAAM,CAACI,MAA/C;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCO,MAAhC;AACAL,MAAAA,QAAQ,CAACb,WAAW,CAACkB,MAAD,CAAZ,CAAR;AACH;AACJ,GAZQ,EAYN,CAACT,MAAD,CAZM,CAAT;AAcA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,KAAK,EAAC,SAAX;AAAA,6BACA;AAAK,QAAA,KAAK,EAAC,SAAX;AAAA,gCACI;AAAK,UAAA,KAAK,EAAC,SAAX;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAS,UAAA,KAAK,EAAC,aAAf;AAAA,oBACKO,MAAM,CAACG,OAAP,CAAeC,GAAf,CAAmBC,KAAK,iBACrB,QAAC,KAAD;AAAO,YAAA,KAAK,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAaI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA,kBADJ;AAiBH,CAzCD;;GAAMjB,M;UAKeR,W,EACAC,W;;;KANfO,M;AA2CN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport queryString from 'query-string';\r\nimport { getMovies } from '../../reducks/movies/selectors';\r\nimport { fetchMovies } from '../../reducks/movies/operations';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Movie from './Movie';\r\n\r\nconst Search = () => {\r\n    const parsed = queryString.parse(window.location.search);\r\n    console.log('the parsed value is :', parsed);\r\n    const [search, setSearch] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const selector = useSelector(state => state);\r\n    const movies = getMovies(selector);\r\n    console.log('the parsed search is :', parsed.search);\r\n\r\n    useEffect(() => {\r\n        if (parsed.search !== undefined) {\r\n            setSearch(parsed.search);\r\n        }\r\n\r\n        if (search != null) {\r\n            let params = { search: search };\r\n            console.log('after parsed search is :', parsed.search);\r\n\r\n            console.log('the params is : ', params);\r\n            dispatch(fetchMovies(params));\r\n        }\r\n    }, [search]);\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div class=\" search\">\r\n            <div class=\"feature\">\r\n                <div class=\"heading\">\r\n                    <h2>Search</h2>\r\n                </div>\r\n                <section class=\"coming-soon\">\r\n                    {movies.results.map(movie => (\r\n                        <Movie movie={movie} />\r\n                    ))}\r\n                </section>\r\n            </div></div>\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}