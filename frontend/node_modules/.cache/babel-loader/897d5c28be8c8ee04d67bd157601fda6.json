{"ast":null,"code":"import axios from 'axios';\nvar baseURL;\n\nif (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === 'PRODUCTION') {\n  baseURL = process.env.REACT_APP_API_BASE_URL;\n} else {\n  baseURL = 'http://127.0.0.1:8000';\n} // baseURL = 'https://sajid-symantic-backend.herokuapp.com/';\n\n\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport default class API {\n  constructor() {\n    this.getMovies = async params => {\n      // the params is {release_type: 'Coming Soon'}\n      let url = '/movies/'; //   the urls is : /movies/\n\n      let query = new URLSearchParams(); //the query is an object of URLSearchParams {} that has the method of append\n\n      for (const key in params) {\n        //the key is : release_type\n        if (params[key] != null) {\n          query.append(key, params[key]); // the query is append : release_type=Coming Soon\n        }\n      }\n\n      if (query.toString() != '') {\n        // the url is release_type=Coming+Soon\n        //the urls is : /movies/\n        url += '?' + query.toString(); //the url is /movies/?release_type=Coming+Soon\n      }\n\n      const places = await api.get(url).then(response => {\n        console.log(response.data); //the url is   /movies/?release_type=Coming+Soon\n\n        console.log('what is response :', response.data);\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      }); // places = responss.data it has all the info of object. id , name , image\n\n      return places;\n    };\n  }\n\n}","map":{"version":3,"sources":["C:/Users/arcstudent/Desktop/New folder (3)/techis-wd-forum-django-react/frontend/src/API.js"],"names":["axios","baseURL","process","env","REACT_APP_ENVIRONMENT","REACT_APP_API_BASE_URL","api","create","headers","API","getMovies","params","url","query","URLSearchParams","key","append","toString","places","get","then","response","console","log","data","catch","error","Error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAIC,OAAJ;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,qBAAZ,IAAqCF,OAAO,CAACC,GAAR,CAAYC,qBAAZ,KAAsC,YAA/E,EAA6F;AACzFH,EAAAA,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYE,sBAAtB;AACH,CAFD,MAEO;AACHJ,EAAAA,OAAO,GAAG,uBAAV;AACH,C,CACD;;;AAEA,MAAMK,GAAG,GAAGN,KAAK,CAACO,MAAN,CAAa;AACrBN,EAAAA,OAAO,EAAEA,OADY;AAErBO,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AAFY,CAAb,CAAZ;AAOA,eAAe,MAAMC,GAAN,CAAU;AAAA;AAAA,SACrBC,SADqB,GACT,MAAMC,MAAN,IAAgB;AACxB;AAEA,UAAIC,GAAG,GAAG,UAAV,CAHwB,CAGF;;AACtB,UAAIC,KAAK,GAAG,IAAIC,eAAJ,EAAZ,CAJwB,CAIW;;AAEnC,WAAK,MAAMC,GAAX,IAAkBJ,MAAlB,EAA0B;AACtB;AACA,YAAIA,MAAM,CAACI,GAAD,CAAN,IAAe,IAAnB,EAAyB;AACrBF,UAAAA,KAAK,CAACG,MAAN,CAAaD,GAAb,EAAkBJ,MAAM,CAACI,GAAD,CAAxB,EADqB,CACW;AACnC;AACJ;;AAED,UAAIF,KAAK,CAACI,QAAN,MAAoB,EAAxB,EAA4B;AACxB;AACA;AAEAL,QAAAA,GAAG,IAAI,MAAMC,KAAK,CAACI,QAAN,EAAb,CAJwB,CAIO;AAClC;;AACD,YAAMC,MAAM,GAAG,MAAMZ,GAAG,CACnBa,GADgB,CACZP,GADY,EAEhBQ,IAFgB,CAEXC,QAAQ,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,EADc,CAEd;;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,QAAQ,CAACG,IAA3C;AAEA,eAAOH,QAAQ,CAACG,IAAhB;AACH,OARgB,EAShBC,KATgB,CASVC,KAAK,IAAI;AACZ,cAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH,OAXgB,CAArB,CAnBwB,CA+BnB;;AACL,aAAOR,MAAP;AACH,KAlCoB;AAAA;;AAAA","sourcesContent":["import axios from 'axios';\r\n\r\nvar baseURL;\r\nif (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === 'PRODUCTION') {\r\n    baseURL = process.env.REACT_APP_API_BASE_URL;\r\n} else {\r\n    baseURL = 'http://127.0.0.1:8000';\r\n}\r\n// baseURL = 'https://sajid-symantic-backend.herokuapp.com/';\r\n\r\nconst api = axios.create({\r\n    baseURL: baseURL,\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nexport default class API {\r\n    getMovies = async params => {\r\n        // the params is {release_type: 'Coming Soon'}\r\n        \r\n        let url = '/movies/'; //   the urls is : /movies/\r\n        let query = new URLSearchParams(); //the query is an object of URLSearchParams {} that has the method of append\r\n\r\n        for (const key in params) {\r\n            //the key is : release_type\r\n            if (params[key] != null) {\r\n                query.append(key, params[key]); // the query is append : release_type=Coming Soon\r\n            }\r\n        }\r\n\r\n        if (query.toString() != '') {\r\n            // the url is release_type=Coming+Soon\r\n            //the urls is : /movies/\r\n\r\n            url += '?' + query.toString(); //the url is /movies/?release_type=Coming+Soon\r\n        }\r\n        const places = await api\r\n            .get(url)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                //the url is   /movies/?release_type=Coming+Soon\r\n                console.log('what is response :', response.data);\r\n\r\n                return response.data;\r\n            })\r\n            .catch(error => {\r\n                throw new Error(error);\r\n            });\r\n             // places = responss.data it has all the info of object. id , name , image\r\n        return places;\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}